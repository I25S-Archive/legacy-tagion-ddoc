/*

This file contains one entry for each element defined by html.ddoc. It
is otherwise content-free. Use it as a starting point in defining
display styles based upon html.ddoc.

*/

/* DIV: Formats the "Authors" section */
.Authors
{
}

/* DIV: Formats the "Bugs" section */
.Bugs
{
}

/* DIV: class members (classes, funs, enums etc) */
.class_members
{
}

/* DIV: Formats the "Copyright" section */
.Copyright
{
}

/* DIV: code section introduced with --- and --- */
.d_code
{
    font-family: "Courier New", monospace;
    white-space: pre;
}

/* SPAN: D comment in code */
.d_comment
{
}

/* SPAN: Declaration, i.e. name introduced with return and parameters
*/
.d_decl
{
}

/* DIV: Description of a declaration */
.d_decl_dd
{
}

/* DIV DIV: Description of an entity defined in the doc */
.d_decl_dd .sections
{
}

/* DIV DIV DIV: Summary of an entity defined in the doc */
.d_decl_dd .sections .summary
{
}

/* SPAN: D keyword in code */
.d_keyword
{
}

/* SPAN: D keyword in code */
.d_keyword
{
}

/* SPAN: parameter style inside function description. Warning,
parameters will be rendered in this style everywhere.*/
.d_param
{
}

/* SPAN: Symbol being introduced */
.d_psymbol
{
}

/* SPAN: D string in code */
.d_string
{
}

/* SPAN: D module title */
.d_title
{
}

/* SPAN: link to Phobos resource */
.phobos_src
{
}

/* DIV: Formats the "Date" section */
.Date
{
}

/* SPAN: Highlight of D keywords? */
.ddoc_keyword
{
}

/* DIV: Formats the "Deprecated" section */
.Deprecated
{
}

/* DIV: Formats the description of an item */
.description
{
}

/* DIV: Formats the description of enum members */
.enum_members
{
}

/* DIV: Formats the "Examples" section */
.Examples
{
}

/* SPAN: This is one of those "Authors:" thingies */
.explanation_item
{
}

/* DIV: This is one of those "Authors: xyz" thingies */
.explanatory
{
}

/* DIV: Formats the "History:" section */
.History
{
}

/* DIV: Formats the "License:" section */
.License
{
}

/* DIV: default style of members (inside classes, structs, enums,
templates) */
.members
{
}

/* DIV: Top-level module members (classes, funs, enums etc) */
.module_members
{
}

/* SPAN: Formats a parameter name all over the description. */
.param
{
}

/* SPAN: Formats a parameter description */
.param_desc
{
}

/* SPAN: Formats a parameter name */
.param_id
{
}

/* TABLE: Formats the parameters table */
.parameters
{
}

/* DIV: Formats the "Params:" section */
.Params
{
}

/* SPAN: Name introduced by a declaration */
.psymbol
{
}

/* DIV: Formats the "Returns:" section */
.Returns
{
}

/* DIV: Formats the "See_Also:" section */
.See_Also
{
}

/* SPAN: Formats a section with an undefined name */
.section
{
}

/* SPAN: Formats the header of a section with an undefined name */
.section_h
{
}

/* DIV: Sections of the document, pretty much the entire doc */
.sections
{
}

/* DIV: Members of a struct */
.struct_members
{
}

/* DIV: Formats the "Standards:" section */
.Standards
{
}

/* DIV: Summary of the module or of a documented entity */
.summary
{
}

/* DIV: Formats the description of a template's members */
.template_members
{
}

/* DIV: Formats the "Throws:" section */
.Throws
{
}

/* DIV: Formats the "Version:" section */
.Version
{
}
